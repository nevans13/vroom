Description: AWS CloudFormation template for vroom resources

Parameters:
  SNSEmail:
    Description: Email to receive SNS alerts
    Type: String
  
  WebpageFQDN:
    Description: FQDN of the vroom webpage
    Type: String
  
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.10.1.0/21
      Tags:
        - Key: Application
          Value: vroom
        - Key: Name
          Value: hub01

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: 10.10.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: vroom
        - Key: Name
          Value: subnet01

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: 10.10.2.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: vroom
        - Key: Name
          Value: subnet02

  PublicSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      CidrBlock: 10.10.3.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: vroom
        - Key: Name
          Value: subnet03

  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 0, !GetAZs "" ]
      CidrBlock: 10.10.4.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: vroom
        - Key: Name
          Value: subnet04

  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 1, !GetAZs "" ]
      CidrBlock: 10.10.5.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: vroom
        - Key: Name
          Value: subnet05

  PrivateSubnet3:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [ 2, !GetAZs "" ]
      CidrBlock: 10.10.6.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Application
          Value: vroom
        - Key: Name
          Value: subnet06

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags: 
        - Key: Application
          Value: vroom
        - Key: Name
          Value: hub01

  GatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC
  
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Default security group for vroom
      GroupName: vroom
      Tags: 
        - Key: Application
          Value: vroom
      VpcId: !Ref VPC

  # Default SNS topic for vroom services
  SNSTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: vroom
      Tags: 
        - Key: Application
          Value: vroom
      TopicName: vroom

  # Default SNS email subscription for vroom notifications
  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref SNSEmail
      Protocol: email
      TopicArn: !GetAtt SNSTopic.TopicArn

  HostedZone:  
    Type: AWS::Route53::HostedZone
    Properties:
      HostedZoneTags: 
        - Key: Application
          Value: vroom
      Name: !Ref WebpageFQDN
  
  # S3 General Bucket to serve the static web content
  WebpageBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: vroom-webpage-819065003150
      PublicAccessBlockConfiguration: 
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      Tags: 
        - Key: Application
          Value: vroom
      WebsiteConfiguration: 
        ErrorDocument: "404.html"
        IndexDocument: "index.html"
  
  # S3 Bucket Policy to permit any source to access the static website contents
  WebpageBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebpageBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - SID: "PublicReadGetObject"
            Action:
              - "s3:GetObject"
            Effect: Allow
            Resource: !Join [ "", [ "arn:aws:s3:::", !Ref WebpageBucket, "/*" ] ]
            Principal: "*"

  # S3 Table Bucket to serve as the database
  TableBucket:
    Type: AWS::S3Tables::TableBucket
    Properties:
      EncryptionConfiguration: 
        SSEAlgorithm: AES256
      TableBucketName: vroom-database-819065003150
      UnreferencedFileRemoval: 
          NoncurrentDays: 1
          Status: Enabled
          UnreferencedDays: 1

  # Route 53 record for the webpage
  WebpageDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZone
      MultiValueAnswer: false
      Name: !Ref WebpageFQDN
      ResourceRecords: 
        - !Join [ "", [ !Ref WebpageBucket, ".s3-website.us-east-2.amazonaws.com" ] ]
      TTL: "300"
      Type: CNAME